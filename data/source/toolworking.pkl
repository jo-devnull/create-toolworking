amends "./@base.pkl"

import "../utils.pkl" as utils

local tools = List("axe", "hoe", "shovel", "pickaxe", "sword", "hammer", "paxel")

local basicRecipes = new {
  for (name, material in utils.Materials) {
    ["forging/\(name)_sheet"] {
      type = "overgeared:forging"
      category = "misc"
      hammering = 3
      has_polishing = false
      has_quality = false
      need_quenching = true
      needs_minigame = true
      show_notification = true
      tier = "stone"

      key {
        I { item = if (material.needsHeat()) material.heated() else material.ingot  }
      }

      pattern { "   " " I " "   " }
      result { item = material.sheet }
    }
  }

  ["forging/charcoal_dust"] = new {
    type = "overgeared:forging"
    category = "misc"
    hammering = 3
    has_polishing = true
    has_quality = false

    key {
      ["#"] {
        item = "minecraft:charcoal"
      }
    }

    need_quenching = true
    needs_minigame = true

    pattern {
      "#"
    }

    result {
      item = "create_ironworks:charcoal_dust"
    }

    show_notification = true
    tier = "stone"
  }

  ["forging/coal_dust"] = new {
    type = "overgeared:forging"
    category = "misc"
    hammering = 3
    has_polishing = true
    has_quality = false

    key {
      ["#"] {
        item = "minecraft:coal"
      }
    }

    need_quenching = true
    needs_minigame = true

    pattern {
      "#"
    }

    result {
      item = "create_ironworks:coal_dust"
    }

    show_notification = true
    tier = "stone"
  }

  ["refractory_mortar"] {
    type = "minecraft:crafting_shapeless"
    category = "misc"

    ingredients {
      new { item = "minecraft:water_bucket" }
      new { item = "minecraft:clay" }
      new { item = "minecraft:sand" }
    }

    result {
      item = "createmetallurgy:refractory_mortar"
    }
  }

  ["refractory_mortar_with_ceramic_bucket"] {
    type = "minecraft:crafting_shapeless"
    category = "misc"

    ingredients {
      new { item = "notreepunching:ceramic_water_bucket" }
      new { item = "minecraft:clay" }
      new { item = "minecraft:sand" }
    }

    result {
      item = "createmetallurgy:refractory_mortar"
    }
  }

  ["melting/bronze"] = new {
    type = "createmetallurgy:melting"
    heatRequirement = "heated"
    ingredients {
      new {
        new { item = "minecraft:raw_copper" }
        new { item = "minecraft:copper_ingot" }
      }

      new {
        new { item = "create_ironworks:raw_tin" }
        new { item = "create_ironworks:tin_ingot" }
      }
    }

    processingTime = 40

    results {
      new {
        amount = 90
        fluid = "createmetallurgy:molten_bronze"
      }
    }
  }

  ["crafting/processed_clay"] = new {
    type = "minecraft:crafting_shapeless"
    category = "misc"
    ingredients {
      new { item = "minecraft:clay" }
      new { item = "minecraft:dried_kelp" }
      new { tag = "minecraft:sand" }

      new {
        new { item = "minecraft:water_bucket" }
        new { item = "notreepunching:ceramic_water_bucket" }
      }
    }

    result {
      item = "toolworking:processed_clay"
    }
  }

  ["mixing/processed_clay"] = new {
    type = "create:mixing"
    category = "misc"
    heatRequirement = "none"
    ingredients {
      new { item = "minecraft:clay" }
      new { item = "minecraft:dried_kelp" }
      new { tag = "minecraft:sand" }
      new { fluid = "minecraft:water" amount = 250 nbt = new {} }
    }

    results {
      new {
        item = "toolworking:processed_clay"
        count = 2
      }
    }
  }
}

local toolRecipeFromPart = new {
  ["crafting/iron_axe"] = recipeTool("iron_axe", "minecraft:iron_axe")
  ["crafting/golden_axe"] = recipeTool("golden_axe", "minecraft:golden_axe")
  ["crafting/copper_axe"] = recipeTool("copper_axe", "create_ironworks:copper_axe")
  ["crafting/bronze_axe"] = recipeTool("bronze_axe", "create_ironworks:bronze_axe")
  ["crafting/brass_axe"] = recipeTool("brass_axe", "create_ironworks:brass_axe")
  ["crafting/steel_axe"] = recipeTool("steel_axe", "create_ironworks:steel_axe")

  ["crafting/iron_hoe"] = recipeTool("iron_hoe", "minecraft:iron_hoe")
  ["crafting/golden_hoe"] = recipeTool("golden_hoe", "minecraft:golden_hoe")
  ["crafting/copper_hoe"] = recipeTool("copper_hoe", "create_ironworks:copper_hoe")
  ["crafting/bronze_hoe"] = recipeTool("bronze_hoe", "create_ironworks:bronze_hoe")
  ["crafting/brass_hoe"] = recipeTool("brass_hoe", "create_ironworks:brass_hoe")
  ["crafting/steel_hoe"] = recipeTool("steel_hoe", "create_ironworks:steel_hoe")

  ["crafting/iron_shovel"] = recipeTool("iron_shovel", "minecraft:iron_shovel")
  ["crafting/golden_shovel"] = recipeTool("golden_shovel", "minecraft:golden_shovel")
  ["crafting/copper_shovel"] = recipeTool("copper_shovel", "create_ironworks:copper_shovel")
  ["crafting/bronze_shovel"] = recipeTool("bronze_shovel", "create_ironworks:bronze_shovel")
  ["crafting/brass_shovel"] = recipeTool("brass_shovel", "create_ironworks:brass_shovel")
  ["crafting/steel_shovel"] = recipeTool("steel_shovel", "create_ironworks:steel_shovel")

  ["crafting/iron_pickaxe"] = recipeTool("iron_pickaxe", "minecraft:iron_pickaxe")
  ["crafting/golden_pickaxe"] = recipeTool("golden_pickaxe", "minecraft:golden_pickaxe")
  ["crafting/copper_pickaxe"] = recipeTool("copper_pickaxe", "create_ironworks:copper_pickaxe")
  ["crafting/bronze_pickaxe"] = recipeTool("bronze_pickaxe", "create_ironworks:bronze_pickaxe")
  ["crafting/brass_pickaxe"] = recipeTool("brass_pickaxe", "create_ironworks:brass_pickaxe")
  ["crafting/steel_pickaxe"] = recipeTool("steel_pickaxe", "create_ironworks:steel_pickaxe")

  ["crafting/iron_sword"] = recipeTool("iron_sword", "minecraft:iron_sword")
  ["crafting/golden_sword"] = recipeTool("golden_sword", "minecraft:golden_sword")
  ["crafting/copper_sword"] = recipeTool("copper_sword", "create_ironworks:copper_sword")
  ["crafting/bronze_sword"] = recipeTool("bronze_sword", "create_ironworks:bronze_sword")
  ["crafting/brass_sword"] = recipeTool("brass_sword", "create_ironworks:brass_sword")
  ["crafting/steel_sword"] = recipeTool("steel_sword", "create_ironworks:steel_sword")

  ["crafting/iron_hammer"]   = recipeTool("iron_hammer", "create_ironworks:iron_hammer")
  ["crafting/gold_hammer"] = recipeTool("golden_hammer", "create_ironworks:gold_hammer")
  ["crafting/copper_hammer"] = recipeTool("copper_hammer", "create_ironworks:copper_hammer")
  ["crafting/bronze_hammer"] = recipeTool("bronze_hammer", "create_ironworks:bronze_hammer")
  ["crafting/brass_hammer"]  = recipeTool("brass_hammer", "create_ironworks:brass_hammer")
  ["crafting/steel_hammer"]  = recipeTool("steel_hammer", "create_ironworks:steel_hammer")

  ["crafting/iron_paxel"]   = recipeTool("iron_paxel", "create_ironworks:iron_paxel")
  ["crafting/gold_paxel"] = recipeTool("golden_paxel", "create_ironworks:gold_paxel")
  ["crafting/copper_paxel"] = recipeTool("copper_paxel", "create_ironworks:copper_paxel")
  ["crafting/bronze_paxel"] = recipeTool("bronze_paxel", "create_ironworks:bronze_paxel")
  ["crafting/brass_paxel"]  = recipeTool("brass_paxel", "create_ironworks:brass_paxel")
  ["crafting/steel_paxel"]  = recipeTool("steel_paxel", "create_ironworks:steel_paxel")
}

local forgingRecipes = new {
  for (material in List("copper", "iron", "steel")) {
    for (tool in List("paxel", "hammer")) {
      ["forging/\(material)_\(tool)_part"] = new {
        type = "overgeared:forging"
        category = "misc"
        hammering = 3
        has_polishing = true
        has_quality = true

        key {
          ["#"] {
            item = "overgeared:heated_\(material)_ingot"
          }
        }

        need_quenching = true
        needs_minigame = false

        when (tool == "paxel") {
          pattern {
            "###"
            "#  "
          }
        } else {
          pattern {
            "###"
            "###"
          }
        }

        result {
          item = "toolworking:\(material)_\(tool)_part"
        }

        show_notification = true
        tier = "stone"
      }
    }
  }
}

recipes {
  ...basicRecipes
  ...toolRecipeFromPart
  ...forgingRecipes

  ["crafting/wooden_axe_part"]     = woodenPart("oo |o  ".split("|"), "wooden_axe_part")
  ["crafting/wooden_hoe_part"]     = woodenPart("oo |   ".split("|"), "wooden_hoe_part")
  ["crafting/wooden_shovel_part"]  = woodenPart(" o |   ".split("|"), "wooden_shovel_part")
  ["crafting/wooden_pickaxe_part"] = woodenPart("ooo|   ".split("|"), "wooden_pickaxe_part")
  ["crafting/wooden_sword_part"]   = woodenPart(" o | o ".split("|"), "wooden_sword_part")

  for (tool in tools) {
    ["mold/\(tool)_mold"] {
      type = "minecraft:crafting_shapeless"
      category = "misc"

      ingredients {
        new { item = "toolworking:processed_clay" }
        new { tag = "toolworking:\(tool)_part" }
      }

      result {
        item = "toolworking:clay_\(tool)_mold"
      }
    }
  }

  ["mold/ingot_mold"] {
    type = "minecraft:crafting_shapeless"
    category = "misc"

    ingredients {
      new { item = "toolworking:processed_clay" }
      new { tag = "forge:ingots" }
    }

    result {
      item = "toolworking:clay_ingot_mold"
    }
  }

  for (name, material in utils.Materials) {
    ["casting_in_table/\(name)/ingot"] {
      type = "createmetallurgy:casting_in_table"

      ingredients {
        new { item = "toolworking:clay_ingot_mold" }
        new {
          amount = 90
          fluid = material.molten()
          nbt {}
        }
      }

      processingTime = 60

      result {
        item = if (material.needsHeat() || name == "copper") material.heated() else material.ingot
      }
    }

    when (name != "tin") {
      for (tool in tools) {
        ["casting_in_table/\(name)/\(tool)"] {
          type = "createmetallurgy:casting_in_table"

          ingredients {
            new { item = "toolworking:clay_\(tool)_mold" }
            new {
              amount = 90
              fluid = material.molten()
              nbt {}
            }
          }

          processingTime = 60

          result {
            when (name == "gold") {
              item = "toolworking:golden_\(tool)_part"
            } else {
              item = "toolworking:\(name)_\(tool)_part"
            }
          }
        }
      }
    }
  }
}

tags {
  for (tool in tools) {
    ["items/\(tool)_part"] {
      replace = false
      values {
        for (material in utils.Materials.keys.filter((s) -> s != "tin")) {
          when (material == "gold") {
            "toolworking:golden_\(tool)_part"
          } else {
            "toolworking:\(material)_\(tool)_part"
          }
        }

        when (tool != "hammer" && tool != "paxel") {
          "toolworking:wooden_\(tool)_part"
        }
      }
    }
  }
}

local function recipeTool(input: String, output: String) = new {
  type = "minecraft:crafting_shaped"
  category = "equipment"

  pattern {
    "Ps"
    "l "
  }

  key {
    P { item = "toolworking:\(input)_part" }
    l { item = "minecraft:stick" }
    s { tag = "forge:string" }
  }

  result {
    item = output
  }
}

local function woodenPart(layout: List<String>, output: String) = new {
  type = "minecraft:crafting_shaped"
  category = "equipment"

  pattern = layout

  key {
    o { tag = "minecraft:planks" }
  }

  result {
    item = "toolworking:\(output)"
  }
}